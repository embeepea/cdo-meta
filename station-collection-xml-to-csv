#! /usr/bin/perl

use XML::Parser::PerlSAX;

my $my_handler = MyHandler->new;
$parser = XML::Parser::PerlSAX->new( Handler => $my_handler );


foreach $filename (<ghcnd-us-stations/*.xml>) {
    #$filename = 'ghcnd-us-stations/ghcnd-us-stations001.xml';
    $parser->parse(Source => { SystemId => $filename });
}

package MyHandler;

my $station;
my $current_chars = '';
my $station_level = 0;

sub new {
    my ($type) = @_;
    return bless {}, $type;
}

sub start_element {
    my ($self, $element) = @_;
    my %attr = %{$element->{Attributes}};

    if ($element->{Name} eq "station") {
        $station = {
        };
        $station_level = 0;
    }

    else {
        ++$station_level;
    }

    $current_chars = '';
}

sub end_element {
    my ($self, $element) = @_;

    if ($element->{Name} eq "station") {
        printf("%s|%s|%s|%s|%s|%s|%s|%s\n",
               $station->{id},
               $station->{displayName},
               $station->{minDate},
               $station->{maxDate},
               $station->{latitude},
               $station->{longitude},
               $station->{elevation},
               $station->{coverage});
        # ...
        return;
    }

    --$station_level;

    if ($station_level != 0) {
        return;
    }

    if ($element->{Name} eq "id") {
        $station->{'id'} = $current_chars;
    }
    elsif ($element->{Name} eq "displayName") {
        $station->{'displayName'} = $current_chars;
    }
    elsif ($element->{Name} eq "minDate") {
        $station->{'minDate'} = $current_chars;
    }
    elsif ($element->{Name} eq "maxDate") {
        $station->{'maxDate'} = $current_chars;
    }
    elsif ($element->{Name} eq "latitude") {
        $station->{'latitude'} = $current_chars;
    }
    elsif ($element->{Name} eq "longitude") {
        $station->{'longitude'} = $current_chars;
    }
    elsif ($element->{Name} eq "elevation") {
        $station->{'elevation'} = $current_chars;
    }
    elsif ($element->{Name} eq "coverage") {
        $station->{'coverage'} = $current_chars;
    }


}

sub characters {
    my ($self, $characters) = @_;
    my $text = $characters->{Data};

    $current_chars .= $characters->{Data};
}
